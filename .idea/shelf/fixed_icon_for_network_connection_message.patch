Index: app/src/main/res/layout/prompter.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/prompter.xml	(revision )
+++ app/src/main/res/layout/prompter.xml	(revision )
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+              android:id="@+id/layout_root"
+              android:layout_width="fill_parent"
+              android:layout_height="fill_parent"
+              android:orientation="vertical"
+              android:padding="10dp" >
+
+    <TextView
+        android:id="@+id/textView1"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Please Type the address here : "
+        android:textAppearance="?android:attr/textAppearanceLarge" />
+
+    <EditText
+        android:id="@+id/editTextDialogUserInput"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content" >
+
+        <requestFocus />
+
+    </EditText>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/values/locations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/locations.xml	(date 1449604788000)
+++ app/src/main/res/values/locations.xml	(revision )
@@ -2,7 +2,7 @@
 <resources>
     <string-array name="locations_array">
         <item>Home</item>
-        <item>Sarahs house</item>
+        <item>BFF house</item>
         <item>Work</item>
         <item>Custom</item>
     </string-array>
\ No newline at end of file
Index: app/src/main/java/com/joshbgold/mappy/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/joshbgold/mappy/MainActivity.java	(date 1449604788000)
+++ app/src/main/java/com/joshbgold/mappy/MainActivity.java	(revision )
@@ -9,17 +9,27 @@
 import android.net.NetworkInfo;
 import android.net.Uri;
 import android.os.Bundle;
+import android.view.KeyEvent;
+import android.view.LayoutInflater;
+import android.view.MotionEvent;
 import android.view.View;
 import android.widget.AdapterView;
 import android.widget.ArrayAdapter;
 import android.widget.Button;
+import android.widget.EditText;
 import android.widget.RadioButton;
 import android.widget.Spinner;
 
-public class MainActivity extends Activity {
+public class MainActivity extends Activity implements onTouchListener{
     private String friendlyLocation = "";
+    public String userInputAddress = "";
     private String address = "";
+    private String homeAddress = "";
+    private String workAddress = "";
+    private String bffAddress = "";
+    private String customAddress = "";
     private String mode = "@mode=d";  //mode b is bicycling, mode d is for driving, mode w is for walking
+    final Context context = this;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -42,12 +52,14 @@
         adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
         // Apply the adapter to the spinner
         addressFieldSpinner.setAdapter(adapter);
+        addressFieldSpinner.setOnTouchListener();
 
+
         launchMapButton.setOnClickListener(new Button.OnClickListener() {
             @Override
             public void onClick(View view) {
 
-                getDestination(addressFieldSpinner);  //gets the destination user has entered
+                //getDestination(addressFieldSpinner);  //gets the destination user has entered
 
                 LaunchNavChoice(googTransitButton, googBikeButton, googDrivingButton, googWalkingButton);
             }
@@ -63,46 +75,46 @@
         exitButton.setOnClickListener(exit);
     }
 
+/*    private void getDestination(Spinner addressFieldSpinner) {
+        friendlyLocation = addressFieldSpinner.getSelectedItem().toString();
+
+        if (friendlyLocation.equals("Home")) {
+            homeAddress = "2617 SE 35th Place, 97202";
+        } else if (friendlyLocation.equals("Sarahs house")) {
+            bffAddress = "3946 NE Failing, 97212";
+        } else if (friendlyLocation.equals("Work")) {
+            workAddress = "619 SW 11th Avenue, 97205";
+        } else if (friendlyLocation.equals("Custom")) {
+            //have an AlertDialog that pops up with an EditText for entering the item then you just add that to your Array
+            //http://stackoverflow.com/questions/15672767/allow-users-to-enter-new-value-in-spinner
+            customAddress = friendlyLocation;
+        } else {
+        }
+    }*/
+
     private void LaunchNavChoice(RadioButton googTransitButton, RadioButton googBikeButton, RadioButton googDrivingButton, RadioButton
             googWalkingButton) {
 
         if (googBikeButton.isChecked()){
             mode = "&mode=bicycling";
-            getGoogleDirections(mode);
+            getGoogleDirections(mode, address);
         }
         else if (googDrivingButton.isChecked()){
             mode = "&mode=driving";
-            getGoogleDirections(mode);
+            getGoogleDirections(mode, address);
         }
         else if (googTransitButton.isChecked()) {
             //transit mode that specifies more walking :-)
             mode = "&mode=transit";
-            getGoogleDirections(mode);
+            getGoogleDirections(mode, address);
         }
         else if (googWalkingButton.isChecked()){
             mode = "&mode=walking";
-            getGoogleDirections(mode);
+            getGoogleDirections(mode, address);
         }
     }
 
-    private void getDestination(Spinner addressFieldSpinner) {
-        friendlyLocation = addressFieldSpinner.getSelectedItem().toString();
-
-        if (friendlyLocation.equals("Home")) {
-            address = "2617 SE 35th Place, 97202";
-        } else if (friendlyLocation.equals("Sarahs house")) {
-            address = "3946 NE Failing, 97212";
-        } else if (friendlyLocation.equals("Work")) {
-            address = "619 SW 11th Avenue, 97205";
-        } else if (friendlyLocation.equals("Custom")) {
-            //have an AlertDialog that pops up with an EditText for entering the item then you just add that to your Array
-            //http://stackoverflow.com/questions/15672767/allow-users-to-enter-new-value-in-spinner
-            address = friendlyLocation;
-        } else {
-        }
-    }
-
-    private void getGoogleDirections(String mode) {
+    private void getGoogleDirections(String mode, String address) {
         boolean connected = isConnected();
 
         if (!connected){
@@ -132,49 +144,92 @@
         }
     }
 
- /*   private void getWazeCarDirections() {
-        try {
-            address = address.replace(' ', '+');
-            Uri mapsIntentUri = Uri.parse("waze.navigation:q=" + address);
-            Intent mapIntent = new Intent( Intent.ACTION_VIEW, mapsIntentUri);
-            startActivity(mapIntent);
+    public String getAddressFromUser(){
 
-            //if Waze is not installed, take user to page where they can download and install Waze
-        } catch (ActivityNotFoundException exception) {
-            Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse("market://details?id=com.waze"));
-        }
-    }*/
+        // get prompts.xml view
+        LayoutInflater layoutInflater = LayoutInflater.from(context);
+        View promptsView = layoutInflater.inflate(R.layout.prompter, null);
 
-    public class SpinnerActivity extends Activity implements AdapterView.OnItemSelectedListener {
+        AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(context);
 
-        public void onItemSelected(AdapterView<?> parent, View view,int pos, long id) {
-            // An item was selected. You can retrieve the selected item using
-            // parent.getItemAtPosition(pos)
-            friendlyLocation = parent.getItemAtPosition(pos).toString();
+        // set prompts.xml to alertdialog builder
+        alertDialogBuilder.setView(promptsView);
 
-            if (friendlyLocation.equals("Home")) {
-                address = "2617 SE 35th Place";
-            } else if (friendlyLocation.equals("Sarahs house")) {
-                address = "3946 NE Failing, Portland, OR 97212";
-            } else if (friendlyLocation.equals("Work")) {
-                address = "619 SW 11th Avenue, Portland, OR 97205";
-            } else if (friendlyLocation.equals("Custom")) {
-                address = friendlyLocation;
-            } else {
+        final EditText userInput = (EditText) promptsView
+                .findViewById(R.id.editTextDialogUserInput);
+
+        // set dialog message
+        alertDialogBuilder
+                .setCancelable(false)
+                .setPositiveButton("OK",
+                        new DialogInterface.OnClickListener() {
+                            public void onClick(DialogInterface dialog,int id) {
+                                // get user input and save it to String variable
+                                userInputAddress = userInput.getText().toString();
-            }
+                            }
+                        })
+                .setNegativeButton("Cancel",
+                        new DialogInterface.OnClickListener() {
+                            public void onClick(DialogInterface dialog,int id) {
+                                dialog.cancel();
-        }
+                            }
+                        });
 
-        public void onNothingSelected(AdapterView<?> parent) {
-            // Another interface callback
+        // create alert dialog
+        AlertDialog alertDialog = alertDialogBuilder.create();
 
+        // show it
+        alertDialog.show();
+
+        return userInputAddress;
-        }
+    }
-    }
 
-    //Checks for mobile or wifi connectivity, returns true for connected, false otherwise
+        //Checks for mobile or wifi connectivity, returns true for connected, false otherwise
     private boolean isConnected() {
         ConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
         return connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).getState() == NetworkInfo.State.CONNECTED ||
                 connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI).getState() == NetworkInfo.State.CONNECTED;
+    }
+
+    public void onTouchListener(AdapterView<?> parent, View view, int position, long id) {
+        friendlyLocation = parent.getItemAtPosition(position).toString();
+
+        if (friendlyLocation.equals("Home")) {
+            if (homeAddress.equals("")){
+                homeAddress = getAddressFromUser();
+                address = homeAddress;
+            }
+            else {
+                address = homeAddress;
+            }
+        }
+
+        else if (friendlyLocation.equals("BFF house")) {
+            if (bffAddress.equals("")) {
+                bffAddress = getAddressFromUser();
+                address = bffAddress;
+            } else {
+                address = bffAddress;
+            }
+        }
+        else if (friendlyLocation.equals("Work")) {
+            if (workAddress.equals("")){
+                workAddress = getAddressFromUser();
+                address = workAddress;
+            }
+            else {
+                address = workAddress;
+            }
+        }
+        else if (friendlyLocation.equals("Custom")) {
+            if (customAddress.equals("")){
+                customAddress = getAddressFromUser();
+                address = customAddress;
+            }
+            else {
+                address = customAddress;
+            }
+        }
     }
 
 }
